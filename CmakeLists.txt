cmake_minimum_required(VERSION 3.11)

project(TransportCatalogue CXX)
set(CMAKE_CXX_STANDARD 17)

set(SOURCE_DIR catalog)

set(FILES_MAIN "${SOURCE_DIR}/main.cpp")
set(FILES_SVG_LIBRARY "${SOURCE_DIR}/svg.h" "${SOURCE_DIR}/svg.cpp" "${SOURCE_DIR}/map_renderer.cpp" "${SOURCE_DIR}/map_renderer.h")
set(FILES_JSON_LIBRARY "${SOURCE_DIR}/json.cpp" "${SOURCE_DIR}/json.h" "${SOURCE_DIR}/json_reader.cpp" "${SOURCE_DIR}/json_reader.h" "${SOURCE_DIR}/json_builder.cpp" "${SOURCE_DIR}/json_builder.h")
set(FILES_DATABASE "${SOURCE_DIR}/transport_catalogue.cpp" "${SOURCE_DIR}/transport_catalogue.h")
set(FILES_GRAPH "${SOURCE_DIR}/transport_router.cpp" "${SOURCE_DIR}/transport_router.h")
set(FILES_INITIAL_STRUCTURES "${SOURCE_DIR}/geo.cpp" "${SOURCE_DIR}/geo.h" "${SOURCE_DIR}/domain.cpp" "${SOURCE_DIR}/domain.h")
set(FILES_REQUEST_HANDLER "${SOURCE_DIR}/request_handler.cpp" "${SOURCE_DIR}/request_handler.h")


add_executable(transportcatalog ${FILES_MAIN} ${FILES_SVG_LIBRARY} ${FILES_JSON_LIBRARY} ${FILES_DATABASE} ${FILES_GRAPH} ${FILES_INITIAL_STRUCTURES} ${FILES_REQUEST_HANDLER})

if(CMAKE_SYSTEM_NAME MATCHES "^MINGW")
    set(SYSTEM_LIBS -lstdc++)
else()
    set(SYSTEM_LIBS)
endif()

target_link_libraries(transportcatalog ${SYSTEM_LIBS})